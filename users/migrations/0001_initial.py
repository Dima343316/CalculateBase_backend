# Generated by Django 5.2.3 on 2025-07-03 11:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email (логин)')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО / Имя')),
                ('role', models.CharField(blank=True, choices=[('admin', 'Администратор'), ('supervisor', 'Руководитель'), ('manager', 'Менеджер по продажам'), ('contractor', 'Контрагент')], max_length=20, null=True, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ к админке')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Архивный')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('action', models.CharField(choices=[('create_invite', 'Создание приглашения'), ('confirmed_invite', 'Подтверждение приглашения'), ('edit_user', 'Редактирование пользователя'), ('delete_user', 'Удаление пользователя'), ('login', 'Вход в систему'), ('logout', 'Выход из системы')], max_length=50, verbose_name='Действие')),
                ('module', models.CharField(max_length=50, verbose_name='Модуль')),
                ('object_repr', models.TextField(verbose_name='Объект')),
                ('changes', models.JSONField(blank=True, null=True, verbose_name='Изменения')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='UserInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_token', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('expires_at', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invite', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
